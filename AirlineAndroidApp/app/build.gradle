apply plugin: 'com.android.application'
apply plugin: 'jacoco'

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }


    def fileFilter = ['**/R.class', '**/R$*.class',
                      '**/BuildConfig.*', '**/Manifest*.*',
                      'android/**/*.*', '**/R.*']
    def debugTree = fileTree(dir:
    "./build/intermediates/app_classes/debug",
//            "${project.buildDir}/intermediates/app_classes/debug",
            excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    classDirectories.setFrom files([mainSrc])
    classDirectories.setFrom files([debugTree])
    executionData.setFrom  fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec'
            ,'outputs/code_coverage/debugAndroidTest/connected/Pixel_2_API_29(AVD) - 10-coverage.ec'
    ])
}
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "edu.pdx.cs410J.sankhes2"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true

        }
        unitTests.all {
            jvmArgs '-noverify'
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.0.0'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'

    testImplementation 'org.mockito:mockito-core:1.10.19'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'edu.pdx.cs410J:projects:Winter2020'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.2.0'
    implementation 'com.google.android.material:material:1.1.0'

    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
    testImplementation 'androidx.test:runner:1.1.1'
    testImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation "com.google.truth:truth:0.40"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:25.0.1'


    // Add Junit and mockito as testing dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'

    //For Roboelectric
    testImplementation "org.robolectric:robolectric:4.3"
}
